syntax = "proto2";

import "scalapb/scalapb.proto";
import "google/protobuf/timestamp.proto";
import "model/payment/card.proto";
import "model/payment/document.proto";
import "model/payment/transaction.proto";
import "model/payment/address.proto";

package app.softnetwork.payment.model;

option (scalapb.options) = {
    single_file: true
    flat_package: true
    import: "app.softnetwork.persistence.message._"
    import: "app.softnetwork.persistence.model._"
    import: "app.softnetwork.protobuf.ScalaPBTypeMappers._"
    import: "app.softnetwork.serialization._"
    import: "app.softnetwork.payment.model._"
    import: "app.softnetwork.payment.serialization._"
    preserve_unknown_fields: false
};

message BankAccount {
    enum MandateStatus {
        // the mandate has been created
        MANDATE_CREATED = 0;
        // the mandate has been submitted to the banks and you can now do payments with this mandate
        MANDATE_SUBMITTED = 1;
        // the mandate is active and has been accepted by the banks and/or successfully used in a payment
        MANDATE_ACTIVATED = 2;
        // the mandate has failed for a variety of reasons and is no longer available for payments
        MANDATE_FAILED = 3;
        // the mandate is expired and is not longer available for payments
        MANDATE_EXPIRED = 4;
    }
    option (scalapb.message).extends = "ProtobufDomainObject";
    option (scalapb.message).extends = "BankAccountDecorator";
    option (scalapb.message).companion_extends = "BankAccountCompanion";
    required string userId = 1;
    required google.protobuf.Timestamp createdDate = 2 [(scalapb.field).type = "java.util.Date"];
    required google.protobuf.Timestamp lastUpdated = 3 [(scalapb.field).type = "java.util.Date"];
    optional string id = 4;
    required string ownerName = 5;
    required Address ownerAddress = 6;
    required string iban = 7;
    required string bic = 8;
    required bool encoded = 9 [default = true];
    required bool active = 10 [default = true];
    required string externalUuid = 11;
    optional string mandateId = 12;
    optional MandateStatus mandateStatus = 13;
    extensions 100 to max;
}

message PaymentUser {
    option (scalapb.message).extends = "ProtobufDomainObject";
    option (scalapb.message).extends = "PaymentUserDecorator";
    required string firstName = 1;
    required string lastName = 2;
    required string email = 3;
    required string nationality = 4 [default = "FR"];
    required string birthday = 5;
    required string countryOfResidence = 6 [default = "FR"];
    optional string userId = 7;
    optional string walletId = 8;
    required string externalUuid = 9;
    extensions 100 to max;
}

message LegalUser {
    enum LegalUserType {
        SOLETRADER = 0;
        BUSINESS = 1;
        ORGANIZATION = 2;
    }
    option (scalapb.message).extends = "ProtobufDomainObject";
    option (scalapb.message).extends = "LegalUserDecorator";
    required LegalUserType legalUserType = 1;
    required string legalName = 2;
    required string siret = 3;
    required PaymentUser legalRepresentative = 4;
    required Address legalRepresentativeAddress = 5;
    required Address headQuartersAddress = 6;
    optional UboDeclaration uboDeclaration = 7;
    optional google.protobuf.Timestamp lastAcceptedTermsOfPSP = 8 [(scalapb.field).type = "java.util.Date"];
    extensions 100 to max;
}

/**
 *
 * @param account - uuid of the account for whom this payment account has been created, either customer, vendor or seller 
 */
message PaymentAccount {
    enum PaymentAccountStatus {
        DOCUMENTS_KO = 0;
        CHARTE_KO = 1;
        COMPTE_OK = 2;
    }
    option (scalapb.message).extends = "ProtobufDomainObject";
    option (scalapb.message).extends = "Timestamped";
    option (scalapb.message).extends = "PaymentAccountDecorator";
    required string uuid = 1;
    required google.protobuf.Timestamp createdDate = 2 [(scalapb.field).type = "java.util.Date"];
    required google.protobuf.Timestamp lastUpdated = 3 [(scalapb.field).type = "java.util.Date"];
    oneof user {
        PaymentUser naturalUser = 4;
        LegalUser legalUser = 5;
    }
    repeated Card cards = 6;
    optional BankAccount bankAccount = 7;
    repeated KycDocument documents = 8;
    required PaymentAccountStatus paymentAccountStatus = 9 [default = DOCUMENTS_KO];
    repeated Transaction transactions = 10;
    extensions 100 to max;
}

message MandateResult{
    required string id = 1;
    required BankAccount.MandateStatus status = 2;
    required string redirectUrl = 3;
    optional string resultCode = 4;
    optional string resultMessage = 5;
}
