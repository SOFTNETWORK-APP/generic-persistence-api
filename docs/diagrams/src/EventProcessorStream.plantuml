@startuml EventProcessorStream
'https://plantuml.com/class-diagram

skinparam monochrome true
hide empty members

package app.softnetwork.persistence {
    package query {
        abstract class JournalProvider <<(T,orchid) trait >>{
            #def eventsByTag(tag: String, offset: Offset): Source[EventEnvelope, NotUsed]
            #def currentPersistenceIds(): Source[String, NotUsed]
        }
        abstract class InMemoryJournalProvider <<(T,orchid) trait >> extends JournalProvider
        abstract class OffsetProvider <<(T,orchid) trait >>{
            #def initOffset(): Unit
            #def readOffset(): Future[Offset]
            #def writeOffset(offset: Offset): Future[Done]
        }
        abstract class InMemoryOffsetProvider <<(T,orchid) trait >> extends OffsetProvider
        JournalProvider <|.. EventProcessorStream: <<self>>
        OffsetProvider <|.. EventProcessorStream: <<self>>
        abstract class EventProcessorStream <E: Event> <<(T,orchid) trait >> extends EventStream {
            #def init(): Unit
            #def processEvent(event: E, persistenceId: PersistenceId, sequenceNr: Long): Future[Done]
        }
        abstract class EventStream <<(T,orchid) trait >> {
            +def tag: String
            +def eventProcessorId: String = tag
        }
    }
    package jdbc.query {
        abstract class JdbcJournalProvider <<(T,orchid) trait >> extends JournalProvider
        abstract class JdbcOffsetProvider <<(T,orchid) trait >> extends OffsetProvider
    }

}

@enduml
